plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.review'
version = '0.0.1'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.apache.lucene:lucene-queryparser:9.6.0'
	implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task downloadChromeDriver() {
	def chromedriverZipName
	def chromedriverExeName
	def chromedriverDir = "${project.projectDir}/chromeDir"
	project.mkdir chromedriverDir
	def osName = System.getProperty('os.name').toLowerCase()

	if (osName.contains('win')) {
		chromedriverZipName = 'chromedriver_win32.zip'
		chromedriverExeName = 'chromedriver.exe'
	} else if (osName.contains('mac')) {
		chromedriverZipName = 'chromedriver_mac64.zip'
		chromedriverExeName = 'chromedriver'
	} else if (osName.contains('linux')) {
		chromedriverZipName = 'chromedriver_linux64.zip'
		chromedriverExeName = 'chromedriver'
	} else {
		throw new GradleException('Unsupported OS')
	}

	if (!project.file( "${chromedriverDir}/${chromedriverExeName}").exists()) {
		def chromedriverUrl = "https://chromedriver.storage.googleapis.com/114.0.5735.90"
		exec {
			commandLine 'curl', '-o', "${chromedriverDir}/${chromedriverZipName}", "${chromedriverUrl}/${chromedriverZipName}"
		}
		exec{
			commandLine 'unzip', "${chromedriverDir}/${chromedriverZipName}", "-d", "${chromedriverDir}"
		}
	}
}

compileJava.dependsOn downloadChromeDriver
